12.1.  Code Snippets: 
// Teacher Code 
const int ledPin = 13;  // Built-in LED 
const int EnTxPin = 2;  // HIGH:Transmitter, LOW:Receiver 
void setup()  
{  
  Serial.begin(9600); 
  Serial.setTimeout(100);   
  pinMode(ledPin, OUTPUT); 
  pinMode(EnTxPin, OUTPUT); 
  digitalWrite(ledPin, LOW);  
  digitalWrite(EnTxPin, HIGH);  
} 
void loop()  
{    
  int rdata = analogRead(0); //data from potentiometer  
  int angle= map(rdata, 0, 1023, 0, 180);  
  //transmitter data packet 
  Serial.print("I"); //initiate data packet 
  Serial.print("S"); //code for servo 
  Serial.print(angle); //servo angle data 
  Serial.print("F"); //finish data packet 
  delay(50);  
  //receiver data packet 
  Serial.print("I"); //initiate data packet 
  Serial.print("L"); //code for sensor 
  Serial.print("F"); //finish data packet 
  Serial.flush();     
  digitalWrite(EnTxPin, LOW); //RS485 as receiver 
  if(Serial. find("i")) 
  { 
      int data=Serial.parseInt();  
      if(Serial.read()=='f') onLED(data);             
  } 
  digitalWrite(EnTxPin, HIGH); //RS485 as transmitter  
}  
void onLED(int data) 
{ 
  if(data>500) digitalWrite(ledPin, HIGH);  
  else digitalWrite(ledPin, LOW);  
} 
 
// Slave Code 
#include <Servo.h> 
Servo myservo;  
const int EnTxPin = 2; 
void setup () { 
  Serial.begin (9600); 
  myservo.attach (9);  
  pinMode(EnTxPin, OUTPUT ); 
  digitalWrite (EnTxPin, LOW ); 
}  
void loop (){ 
  if ( Serial.available ()){ 
    if ( Serial.read () == 'I' ){ 
      char function = Serial.read (); 
      if (function == 'S' ){ 
        int angle = Serial.parseInt (); 
        if ( Serial.read () == 'F' ){ 
          if (angle <= 180) myservo.write (angle); 
         } 
      } 
      else if (function == 'L' ){ 
        if ( Serial.read () == 'F' ){ 
          int val = analogRead (0); 
          digitalWrite (EnTxPin, HIGH ); //enable to transmit 
          Serial.print ( "i" );  
          Serial.print (val);  
          Serial.println ( "f" );  
          Serial.flush ();  
          digitalWrite (EnTxPin, LOW ); //enable to receive 
        } 
      } 
    } 
  } 
  delay (10); 
} 
